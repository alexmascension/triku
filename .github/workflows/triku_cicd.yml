name: triku CICD

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]


jobs:
  build_system:
    runs-on: ubuntu-latest
    container: python:3.8
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -V     # Print out python version for debugging
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip install pytest pytest-xdist pytest-cov pytest-sugar pytest-ordering codecov
        pip install -r requirements.txt
        pip install pre-commit
        pytest -s -m "import_triku" 

  codecov_prepare:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [build_system]
    steps:
    - run: |
        rm -f .cov*
        rm -rf htmlcov


  test_general:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [codecov_prepare]
    steps:
    - run: |
        pytest -s -n 4 -m "general" --cov=./triku/  --cov-append
        mv .coverage .coverage.general

  test_output_check:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [codecov_prepare]
    steps:
    - run: |
        pytest -s -n 4 -m "output_check" --cov=./triku/  --cov-append
        mv .coverage .coverage.ouput_check

  test_args_var_check:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [codecov_prepare]
    steps:
    - run: |
        pytest -s -n 4 -m "var_check" --cov=./triku/  --cov-append
        mv .coverage .coverage.var_check

  test_args_calc_check:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [codecov_prepare]
    steps:
    - run: |
        pytest -s -n 4 -m "calc_check" --cov=./triku/  --cov-append
        mv .coverage .coverage.calc_check

  test_unit_exception_checks:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [codecov_prepare]
    steps:
    - run: |
        pytest -s -n 4 -m "exception_check" --cov=./triku/  --cov-append
        mv .coverage .coverage.exception_check

  codecov_out:
    runs-on: ubuntu-latest
    container: python:3.8
    needs: [test_general,test_output_check,test_args_var_check,test_args_calc_check,test_unit_exception_checks]
    steps:
    - run: |
        coverage combine .cov*
        pytest -s -n 1 -m "end" --cov=./triku/ --cov-append --cov-report=html
        codecov --token=6e1967cb-4cf2-4eee-b32a-82b0ca1725a0
        rm -f .cov*
        rm -rf htmlcov
