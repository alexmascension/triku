name: triku

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]

jobs:
  build_system:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
          restore-keys: |
            ${{ hashFiles('requirements.txt') }}-
      - name: Install dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          python -V     # Print out python version for debugging
          pip install pytest pytest-xdist pytest-cov pytest-sugar pytest-ordering codecov
          pip install -r requirements.txt
          pip install pre-commit
      - name: Check cache test
        run: |
          pytest -s -m "import_triku"  --cov=./triku/  --cov-append
          mv .coverage .coverage.imports
      - name: Upload test_imports
        uses: actions/upload-artifact@v2
        with:
          name: coverage-imports
          path: .coverage.imports

  test_general:
    runs-on: ubuntu-latest
    needs: [build_system]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Run test_general
        run: |
          pytest -s -n 4 -m "general" --cov=./triku/  --cov-append
          mv .coverage .coverage.general
      - name: Upload test_general
        uses: actions/upload-artifact@v2
        with:
          name: coverage-general
          path: .coverage.general

  test_output_check:
    runs-on: ubuntu-latest
    needs: [build_system]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Run test_output_check
        run: |
          pytest -s -n 4 -m "output_check" --cov=./triku/  --cov-append
          mv .coverage .coverage.ouput_check
      - name: Upload test_output_check
        uses: actions/upload-artifact@v2
        with:
          name: coverage-ouput_check
          path: .coverage.ouput_check

  test_args_var_check:
    runs-on: ubuntu-latest
    needs: [build_system]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Run test_args_var_check
        run: |
          pytest -s -n 4 -m "var_check" --cov=./triku/  --cov-append
          mv .coverage .coverage.var_check
      - name: Upload test_args_var_check
        uses: actions/upload-artifact@v2
        with:
          name: coverage-var_check
          path: .coverage.var_check

  test_args_calc_check:
    runs-on: ubuntu-latest
    needs: [build_system]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Run test_args_calc_check
        run: |
          pytest -s -n 4 -m "calc_check" --cov=./triku/  --cov-append
          mv .coverage .coverage.calc_check
      - name: Upload test_args_calc_check
        uses: actions/upload-artifact@v2
        with:
          name: coverage-calc_check
          path: .coverage.calc_check

  test_unit_exception_checks:
    runs-on: ubuntu-latest
    needs: [build_system]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Run test_unit_exception_checks
        run: |
          pytest -s -n 4 -m "exception_check" --cov=./triku/  --cov-append
          mv .coverage .coverage.exception_check
      - name: Upload test_unit_exception_checks
        uses: actions/upload-artifact@v2
        with:
          name: coverage-exception_check
          path: .coverage.exception_check

  codecov_out:
    runs-on: ubuntu-latest
    needs:
      [
        test_general,
        test_output_check,
        test_args_var_check,
        test_args_calc_check,
        test_unit_exception_checks,
      ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Load cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ hashFiles('requirements.txt') }}-${{ hashFiles('.github/workflows/triku_cicd.yml') }}
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Merge and upload codecov
        run: |
          coverage combine /home/runner/work/triku/triku/cov*
          pytest -s -n 1 -m "end" --cov=./triku/ --cov-append --cov-report=html
          codecov --token=fb6873c7-fc57-44b0-808a-b346bc1ced78
